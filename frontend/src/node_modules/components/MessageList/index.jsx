import React, { Fragment } from 'react';
import { compose } from 'redux';
import { connect } from 'react-redux';

//Components
import MessageList from './MessageList';

//HOCS
import { loadMessages } from 'components/HOCs';

import { GetMessageList } from 'actions';

class MessagesPage extends React.Component {
    
    constructor() {
        super();
        this.renderMessageList = this.renderMessageList.bind(this);
    }

    renderMessageList = (list) => {
        return list.map((item, index) => {
            let position = item.owner === this.props.userId ? 'right': 'left';
            return {
                position,
                type: 'text',
                text: item.text,
                date: new Date()
            }
        })
    }

    componentDidMount() {
        this.props.subscribeMessages(
            this.props.token,
            this.props.match.params.id
        )
        
    }

    render() {
        const { 
            messageList, 
            userId, 
            sendMessage,
            token
        } = this.props;
        return (
            <Fragment>
                <MessageList
                    messageList={messageList}
                    renderMessageList={this.renderMessageList}
                    sendMessage={sendMessage}
                />
            </Fragment>
        );
    }
}

const MapStateToProps = (state) => ({
    messageList: state.messageList
})

export default compose(
    connect( MapStateToProps, { GetMessageList }),
    loadMessages
)(MessagesPage)