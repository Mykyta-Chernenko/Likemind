import React, { Fragment } from 'react';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { SubmissionError } from 'redux-form';
import { withHandlers, compose, toClass } from 'recompose';

//Tools
import { isFailure, isLoading, isSuccess } from 'actions';
import { LOGIN } from 'constants/index'
import { postPattern } from 'services/sendAccount';
import localStorageApi from 'services/localStorageApi';

//Components
import Form from './Form';

function Login(props){
    return (
        <Fragment>
            <Form formSubmit={props.formSubmit} />
        </Fragment>
    );
}

const handlers = withHandlers({
    formSubmit: props => values => {
        const {
            isLoading,
            isSuccess,
            subscribeNotifies,
            loadUserInfo,
            history,
            isFailure
        } = props;
        isLoading(LOGIN);
        return postPattern('/api/obtain-jwt-token/', values)
            .then(
                json => {
                    const { token } = json.data;
                    localStorageApi.setItem('token', token);
                    isSuccess(LOGIN, {token});
                    subscribeNotifies(token);
                    loadUserInfo(token);
                    history.push('/');
                },
                err => {
                    isFailure(LOGIN);
                    throw new SubmissionError({
                        email: '',
                        _error: 'Unable to log in with provided credentials.',
                    });
                }
            );
    }
})

export default compose(
    connect(null, {isFailure, isLoading, isSuccess}),
    handlers,
    withRouter,
    toClass
)(Login)