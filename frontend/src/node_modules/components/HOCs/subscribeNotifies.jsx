import React from 'react';

import { messageSocket } from "constants/index";

import { SocketApi } from 'services';

const socketSubscribe = (Component) => {
    class AsyncComponent extends React.Component {
        constructor() {
            super();
            this.subscribeNotifies = this.subscribeNotifies.bind(this);
        }

        subscribeNotifies(token) {
            if (!token) return;
            this.socket = new SocketApi('ws://0.0.0.0:8000/user/?token=' + token);

            this.receiveNotifies();

            //Delete in PROD!
            this.socket.onopen = () => {
                console.log("User message_socket open");
            };
            this.socket.onclose = () => {
                console.log('User message_socket disconnected')
            };
            this.socket.onerror = (e) => {
                console.log(e)
            };
            //-------------------
        }
        
        receiveNotifies() {
            this.socket.onmessage = (event) => {
                console.log(event)
                const data = JSON.parse(event.data);
                if (data.action_type === messageSocket.TEXT_MESSAGE) {
                    console.log(data.action);
                    console.log('dispatch comp')
                }
            };
        }
        
        render() {
            return (
                <Component
                    subscribeNotifies={this.subscribeNotifies}
                    {...this.props} 
                />
            )
        }
    }
    return AsyncComponent;
};

export default socketSubscribe;