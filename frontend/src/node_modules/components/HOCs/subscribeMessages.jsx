import React from 'react';

import { TEXT_MESSAGE } from "constants/websocket-actions-types";

import SocketApi from 'services/socketApi';

const socketSubscribe = (Component) => {
    class AsyncComponent extends React.Component {
        constructor() {
            super();
            this.subscribeMessages = this.subscribeMessages.bind(this);
            this.sendMessage = this.sendMessage.bind(this);
        }

        subscribeMessages(token, chatId) {
            if (!token && !chatId) return;
            this.socket = new SocketApi(
                `ws://0.0.0.0:8000/private_chat/?token=${token}&private_chat_id=${chatId}`
            )

            this.receiveMessage();

            //Delete in PROD!
            this.socket.onopen = () => {
                console.log("User message_socket open");
            };
            this.socket.onclose = () => {
                console.log('User message_socket disconnected')
            };
            this.socket.onerror = (e) => {
                console.log(e)
            };
            //-------------------
        }

        receiveMessage() {
            this.socket.onmessage = (event) => {
                const data = JSON.parse(event.data);
                if (data.type === TEXT_MESSAGE) {
                    console.log(data.action);
                    console.log('dispatch comp')
                }
            };
        }

        sendMessage(message) {
            this.socket.send(message);
        }
    
        render() {
            return (
                <Component
                    subscribeMessages={this.subscribeMessages}
                    sendMessage={this.sendMessage}
                    {...this.props} 
                />
            )
        }
    }
    return AsyncComponent;
};

export default socketSubscribe;