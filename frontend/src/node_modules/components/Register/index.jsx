import React, { Fragment } from 'react';
import { connect } from 'react-redux';
import { withRouter } from 'react-router-dom';
import { SubmissionError } from 'redux-form';
import { withHandlers, compose, toClass } from 'recompose';
import { message } from 'antd';


//Components
import Form from './Form';

//Tools
import { isFailure, isLoading, isSuccess } from 'actions';
import { REGISTER } from 'constants';
import { guestRequests } from 'services';


function Register(props) {
    return (
        <Fragment>
            <Form formSubmit={props.formSubmit} />
        </Fragment>
    );
}

const handlers = withHandlers({
    formSubmit: props => values => {
        const {
            isLoading,
            isFailure,
            isSuccess
        } = props;
        this.hide = message.loading('Please wait', )
        delete values['confirm-password'];
        isLoading(REGISTER);
        return guestRequests.Post('users/', values).then(
            req => {
                isSuccess(REGISTER);
                message.success('Please check your email!');
            },
            err => {
                
                isFailure(REGISTER);
                message.error('Please check your email!');
                throw new SubmissionError({
                    email: 'Email already exist.',
                    _error: 'Login failed!',
                });
            }
        );
    }
})

export default compose(
    connect(null, {isFailure, isLoading, isSuccess}),
    handlers,
    withRouter,
    toClass
)(Register)