import React from 'react';
import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import { PrivateRoute } from './PrivateRoute';
import { Login, Register, Menu, NoMatch, TestChat } from '../components';
import { LOGIN, isSuccess, isFailure } from '../actions';
import localStorageApi from '../services/localStorageApi';

/*eslint-disable */
class Routes extends React.Component {
    componentDidMount() {
        this.props.setLoggedIn(localStorageApi.getItem());
        console.log('Route did mount!')
    }

    render() {
        return (
            <Router>
                <Switch>
                    <Route exact path="/login" component={Login} />
                    <Route exact path="/register" component={Register} />
                    <Route exact path="/chat" component={TestChat} />
                    <Menu>
                        <PrivateRoute exact path="/" render={() => <h1> You are logedIn! </h1> } />
                        <PrivateRoute
                            path="/logout"
                            render={() => {
                                localStorage.removeItem('token');
                                return <Redirect to="login" />;
                            }}
                        />
                    </Menu>
                    <Route render={() => <NoMatch isloggedIn={this.isLoggedIn} />} />
                </Switch>
            </Router>
        );
    }
}

const mapStateToProps = state => (
    {
        isLoggedIn: state.isLoggedIn
    }
)

const mapDispatchToProps = dispatch => (
    {
        setLoggedIn: state => state ? dispatch(isSuccess(LOGIN)) : dispatch(isFailure(LOGIN))
    }
)

export default connect(mapStateToProps, mapDispatchToProps)(Routes);
